<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <module name="SuppressionFilter">
        <property name="file" value="${config_loc}/checkstyle-suppressions.xml"/>
        <property name="optional" value="false"/>
    </module>

    <module name="SuppressWarningsFilter" />

    <property name="fileExtensions" value="java"/>

    <module name="LineLength">
        <property name="severity" value="warning"/>
        <property name="max" value="120"/>
    </module>

    <module name="TreeWalker">

        <!--
            Checks for blocks.
            See http://checkstyle.sf.net/config_blocks.html
        -->
        <module name="AvoidNestedBlocks" />
        <!-- Checks for empty blocks (i.e., for loops, if blocks, etc.) -->
        <module name="EmptyBlock" />
        <!-- Confirms default usage of left curly braces (i.e., at the end of the line). -->
        <module name="LeftCurly" />
        <module name="NeedBraces">
            <!-- override default and allow single line statements in blocks without braces -->
            <property name="allowSingleLineStatement" value="true"/>
        </module>
        <!-- Confirms default usage of right curly braces. -->
        <module name="RightCurly" />

        <!--
            Checks for class design
            See http://checkstyle.sf.net/config_design.html
        -->
        <!--        <module name="HideUtilityClassConstructor" />-->
        <!-- Check that each file contains only one top-level class. -->
        <module name="OneTopLevelClass" />

        <!--
            Checks for common coding problems
            See http://checkstyle.sf.net/config_coding.html
        -->
        <module name="AvoidDoubleBraceInitialization" />
        <module name="AvoidNoArgumentSuperConstructorCall" />
        <module name="CovariantEquals" />
        <module name="EmptyStatement" />
        <module name="EqualsAvoidNull" />
        <module name="EqualsHashCode" />
        <module name="ExplicitInitialization" />
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
        </module>
        <!--
            Confirm that assignments are not contained in subexpressions.
            https://checkstyle.sourceforge.io/checks/coding/innerassignment.html
        -->
        <module name="InnerAssignment" />
        <module name="ModifiedControlVariable">
            <property name="skipEnhancedForLoopVariable" value="true"/>
        </module>
        <!-- commented out for HW1 - RocketShip because there are lots of multiple string literals -->
        <!--        <module name="MultipleStringLiterals" />-->
        <module name="MultipleVariableDeclarations" />
        <module name="NestedForDepth">
            <property name="max" value="2"/>
            <message key="nested.for.depth"
                     value="Loops are too heavily nested; code should either be simplified or refactored"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
            <message key="nested.if.depth"
                     value="If statements are too heavily nested; code should either be simplified or refactored"/>
        </module>
        <module name="NoClone" />
        <module name="NoFinalizer" />
        <module name="OneStatementPerLine" />
        <module name="OverloadMethodsDeclarationOrder" />
        <module name="ParameterAssignment" />
        <module name="RequireThis" />
        <module name="SimplifyBooleanExpression">
            <message key="simplify.expression"
                     value="Boolean expression can be simplified (poor boolean zen)"/>
        </module>
        <module name="SimplifyBooleanReturn">
            <message key="simplify.boolreturn"
                     value="Boolean return code can be simplified (poor boolean zen)"/>
        </module>
        <module name="StringLiteralEquality">
            <property name="severity" value="warning"/>
        </module>
        <module name="UnnecessaryParentheses" />
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration" />
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration" />
        <module name="UnusedLocalVariable" />
        <module name="VariableDeclarationUsageDistance" />

        <!--
            Checks for imports
            See http://checkstyle.sf.net/config_import.html
        -->
        <!--        <module name="AvoidStarImport">-->
        <!--            <property name="excludes" value="javax.swing, java.awt, org.antlr.v4.runtime"/>-->
        <!--        </module>-->
        <module name="RedundantImport" />
        <module name="UnusedImports" />

        <!--
            Checks for Javadoc Comments
            See https://checkstyle.sourceforge.io/config_javadoc.html
        -->
        <module name="InvalidJavadocPosition" />
        <module name="JavadocMethod" />
        <module name="JavadocStyle" />
        <!--        <module name="MissingJavadocMethod" />-->
        <!-- confirms Javadoc precedes class, interface, enum, or annotation declarations -->
        <!--        <module name="MissingJavadocType" />-->
        <module name="SingleLineJavadoc" />

        <!--
            Checks for metrics
            See http://checkstyle.sf.net/config_metrics.html
        -->
        <module name="BooleanExpressionComplexity">
            <property name="max" value="4"/>
        </module>
        <module name="CyclomaticComplexity">
            <property name="max" value="20"/>
            <message key="cyclomaticComplexity"
                     value="Method is too complex: simplify the control flow or refactor into helper methods."/>
        </module>
        <!--<module name="NPathComplexity"/>-->

        <!--
            Miscellaneous other checks.
            See http://checkstyle.sf.net/config_misc.html
        -->
        <module name="ArrayTypeStyle" />
        <module name="CommentsIndentation" />
        <!-- default settings are generous -->
        <module name="Indentation" />
        <module name="NoCodeInFile" />
        <module name="OuterTypeFilename" />
        <module name="TodoComment">
            <property name="format" value="(TODO)|(todo)|(FIXME)|(fixme)" />
            <message key="todo.match"
                     value="Found a stray TODO/FIXME comment" />
        </module>
        <module name="UpperEll" />

        <!--
            Modifier Checks
            See http://checkstyle.sf.net/config_modifiers.html
        -->
        <module name="ModifierOrder" />

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName" />
        <module name="LocalFinalVariableName" />
        <module name="LocalVariableName" />
        <module name="MethodName">
            <!-- cannot be the same as the class name -->
            <property name="allowClassName" value="false"/>
        </module>
        <module name="ParameterName" />
        <module name="StaticVariableName" />

        <!--
            Checks for Size Violations.
            See http://checkstyle.sf.net/config_sizes.html
        -->
        <module name="ParameterNumber" />

        <!--
            Checks for whitespace
            See http://checkstyle.sf.net/config_whitespace.html
        -->
        <module name="EmptyForInitializerPad" />
        <module name="EmptyForIteratorPad" />
        <module name="GenericWhitespace" />
        <module name="MethodParamPad" />
        <module name="NoWhitespaceAfter" />
        <module name="NoWhitespaceBefore" />
        <module name="ParenPad" />
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter" />

    </module>
</module>